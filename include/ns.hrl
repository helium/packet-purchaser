%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.17.0

-ifndef(ns).
-define(ns, true).

-define(ns_gpb_version, "4.17.0").

-ifndef('NS.CREATESERVICEPROFILEREQUEST_PB_H').
-define('NS.CREATESERVICEPROFILEREQUEST_PB_H', true).
-record('ns.CreateServiceProfileRequest',
    % = 1, optional
    {service_profile = undefined :: ns:'ns.ServiceProfile'() | undefined}
).
-endif.

-ifndef('NS.CREATESERVICEPROFILERESPONSE_PB_H').
-define('NS.CREATESERVICEPROFILERESPONSE_PB_H', true).
-record('ns.CreateServiceProfileResponse',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETSERVICEPROFILEREQUEST_PB_H').
-define('NS.GETSERVICEPROFILEREQUEST_PB_H', true).
-record('ns.GetServiceProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETSERVICEPROFILERESPONSE_PB_H').
-define('NS.GETSERVICEPROFILERESPONSE_PB_H', true).
-record('ns.GetServiceProfileResponse',
    % = 1, optional
    {service_profile = undefined :: ns:'ns.ServiceProfile'() | undefined,
        % = 2, optional
        created_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        updated_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.UPDATESERVICEPROFILEREQUEST_PB_H').
-define('NS.UPDATESERVICEPROFILEREQUEST_PB_H', true).
-record('ns.UpdateServiceProfileRequest',
    % = 1, optional
    {service_profile = undefined :: ns:'ns.ServiceProfile'() | undefined}
).
-endif.

-ifndef('NS.DELETESERVICEPROFILEREQUEST_PB_H').
-define('NS.DELETESERVICEPROFILEREQUEST_PB_H', true).
-record('ns.DeleteServiceProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.CREATEROUTINGPROFILEREQUEST_PB_H').
-define('NS.CREATEROUTINGPROFILEREQUEST_PB_H', true).
-record('ns.CreateRoutingProfileRequest',
    % = 1, optional
    {routing_profile = undefined :: ns:'ns.RoutingProfile'() | undefined}
).
-endif.

-ifndef('NS.CREATEROUTINGPROFILERESPONSE_PB_H').
-define('NS.CREATEROUTINGPROFILERESPONSE_PB_H', true).
-record('ns.CreateRoutingProfileResponse',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETROUTINGPROFILEREQUEST_PB_H').
-define('NS.GETROUTINGPROFILEREQUEST_PB_H', true).
-record('ns.GetRoutingProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETROUTINGPROFILERESPONSE_PB_H').
-define('NS.GETROUTINGPROFILERESPONSE_PB_H', true).
-record('ns.GetRoutingProfileResponse',
    % = 1, optional
    {routing_profile = undefined :: ns:'ns.RoutingProfile'() | undefined,
        % = 2, optional
        created_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        updated_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.UPDATEROUTINGPROFILEREQUEST_PB_H').
-define('NS.UPDATEROUTINGPROFILEREQUEST_PB_H', true).
-record('ns.UpdateRoutingProfileRequest',
    % = 1, optional
    {routing_profile = undefined :: ns:'ns.RoutingProfile'() | undefined}
).
-endif.

-ifndef('NS.DELETEROUTINGPROFILEREQUEST_PB_H').
-define('NS.DELETEROUTINGPROFILEREQUEST_PB_H', true).
-record('ns.DeleteRoutingProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.CREATEDEVICEPROFILEREQUEST_PB_H').
-define('NS.CREATEDEVICEPROFILEREQUEST_PB_H', true).
-record('ns.CreateDeviceProfileRequest',
    % = 1, optional
    {device_profile = undefined :: ns:'ns.DeviceProfile'() | undefined}
).
-endif.

-ifndef('NS.CREATEDEVICEPROFILERESPONSE_PB_H').
-define('NS.CREATEDEVICEPROFILERESPONSE_PB_H', true).
-record('ns.CreateDeviceProfileResponse',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETDEVICEPROFILEREQUEST_PB_H').
-define('NS.GETDEVICEPROFILEREQUEST_PB_H', true).
-record('ns.GetDeviceProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETDEVICEPROFILERESPONSE_PB_H').
-define('NS.GETDEVICEPROFILERESPONSE_PB_H', true).
-record('ns.GetDeviceProfileResponse',
    % = 1, optional
    {device_profile = undefined :: ns:'ns.DeviceProfile'() | undefined,
        % = 2, optional
        created_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        updated_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.UPDATEDEVICEPROFILEREQUEST_PB_H').
-define('NS.UPDATEDEVICEPROFILEREQUEST_PB_H', true).
-record('ns.UpdateDeviceProfileRequest',
    % = 1, optional
    {device_profile = undefined :: ns:'ns.DeviceProfile'() | undefined}
).
-endif.

-ifndef('NS.DELETEDEVICEPROFILEREQUEST_PB_H').
-define('NS.DELETEDEVICEPROFILEREQUEST_PB_H', true).
-record('ns.DeleteDeviceProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.DEVICE_PB_H').
-define('NS.DEVICE_PB_H', true).
-record('ns.Device',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, optional
        device_profile_id = <<>> :: iodata() | undefined,
        % = 3, optional
        service_profile_id = <<>> :: iodata() | undefined,
        % = 4, optional
        routing_profile_id = <<>> :: iodata() | undefined,
        % = 5, optional
        skip_f_cnt_check = false :: boolean() | 0 | 1 | undefined,
        % = 6, optional
        reference_altitude = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 7, optional
        is_disabled = false :: boolean() | 0 | 1 | undefined}
).
-endif.

-ifndef('NS.CREATEDEVICEREQUEST_PB_H').
-define('NS.CREATEDEVICEREQUEST_PB_H', true).
-record('ns.CreateDeviceRequest',
    % = 1, optional
    {device = undefined :: ns:'ns.Device'() | undefined}
).
-endif.

-ifndef('NS.GETDEVICEREQUEST_PB_H').
-define('NS.GETDEVICEREQUEST_PB_H', true).
-record('ns.GetDeviceRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETDEVICERESPONSE_PB_H').
-define('NS.GETDEVICERESPONSE_PB_H', true).
-record('ns.GetDeviceResponse',
    % = 1, optional
    {device = undefined :: ns:'ns.Device'() | undefined,
        % = 2, optional
        created_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        updated_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.UPDATEDEVICEREQUEST_PB_H').
-define('NS.UPDATEDEVICEREQUEST_PB_H', true).
-record('ns.UpdateDeviceRequest',
    % = 1, optional
    {device = undefined :: ns:'ns.Device'() | undefined}
).
-endif.

-ifndef('NS.DELETEDEVICEREQUEST_PB_H').
-define('NS.DELETEDEVICEREQUEST_PB_H', true).
-record('ns.DeleteDeviceRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.DEVICEACTIVATION_PB_H').
-define('NS.DEVICEACTIVATION_PB_H', true).
-record('ns.DeviceActivation',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, optional
        dev_addr = <<>> :: iodata() | undefined,
        % = 3, optional
        s_nwk_s_int_key = <<>> :: iodata() | undefined,
        % = 4, optional
        f_nwk_s_int_key = <<>> :: iodata() | undefined,
        % = 5, optional
        nwk_s_enc_key = <<>> :: iodata() | undefined,
        % = 6, optional, 32 bits
        f_cnt_up = 0 :: non_neg_integer() | undefined,
        % = 7, optional, 32 bits
        n_f_cnt_down = 0 :: non_neg_integer() | undefined,
        % = 8, optional, 32 bits
        a_f_cnt_down = 0 :: non_neg_integer() | undefined,
        % = 9, optional
        skip_f_cnt_check = false :: boolean() | 0 | 1 | undefined}
).
-endif.

-ifndef('NS.ACTIVATEDEVICEREQUEST_PB_H').
-define('NS.ACTIVATEDEVICEREQUEST_PB_H', true).
-record('ns.ActivateDeviceRequest',
    % = 1, optional
    {device_activation = undefined :: ns:'ns.DeviceActivation'() | undefined}
).
-endif.

-ifndef('NS.DEACTIVATEDEVICEREQUEST_PB_H').
-define('NS.DEACTIVATEDEVICEREQUEST_PB_H', true).
-record('ns.DeactivateDeviceRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETDEVICEACTIVATIONREQUEST_PB_H').
-define('NS.GETDEVICEACTIVATIONREQUEST_PB_H', true).
-record('ns.GetDeviceActivationRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETDEVICEACTIVATIONRESPONSE_PB_H').
-define('NS.GETDEVICEACTIVATIONRESPONSE_PB_H', true).
-record('ns.GetDeviceActivationResponse',
    % = 1, optional
    {device_activation = undefined :: ns:'ns.DeviceActivation'() | undefined}
).
-endif.

-ifndef('NS.GETRANDOMDEVADDRRESPONSE_PB_H').
-define('NS.GETRANDOMDEVADDRRESPONSE_PB_H', true).
-record('ns.GetRandomDevAddrResponse',
    % = 1, optional
    {dev_addr = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.CREATEMACCOMMANDQUEUEITEMREQUEST_PB_H').
-define('NS.CREATEMACCOMMANDQUEUEITEMREQUEST_PB_H', true).
-record('ns.CreateMACCommandQueueItemRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 4, optional, 32 bits
        cid = 0 :: non_neg_integer() | undefined,
        % = 5, repeated
        commands = [] :: [iodata()] | undefined}
).
-endif.

-ifndef('NS.SENDPROPRIETARYPAYLOADREQUEST_PB_H').
-define('NS.SENDPROPRIETARYPAYLOADREQUEST_PB_H', true).
-record('ns.SendProprietaryPayloadRequest',
    % = 1, optional
    {mac_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        mic = <<>> :: iodata() | undefined,
        % = 3, repeated
        gateway_macs = [] :: [iodata()] | undefined,
        % = 4, optional
        polarization_inversion = false :: boolean() | 0 | 1 | undefined,
        % = 5, optional, 32 bits
        frequency = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        dr = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('NS.GATEWAY_PB_H').
-define('NS.GATEWAY_PB_H', true).
-record('ns.Gateway',
    % = 1, optional
    {id = <<>> :: iodata() | undefined,
        % = 2, optional
        location = undefined :: ns:'common.Location'() | undefined,
        % = 3, optional
        gateway_profile_id = <<>> :: iodata() | undefined,
        % = 4, repeated
        boards = [] :: [ns:'ns.GatewayBoard'()] | undefined,
        % = 5, optional
        routing_profile_id = <<>> :: iodata() | undefined,
        % = 6, optional
        service_profile_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GATEWAYBOARD_PB_H').
-define('NS.GATEWAYBOARD_PB_H', true).
-record('ns.GatewayBoard',
    % = 1, optional
    {fpga_id = <<>> :: iodata() | undefined,
        % = 2, optional
        fine_timestamp_key = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.CREATEGATEWAYREQUEST_PB_H').
-define('NS.CREATEGATEWAYREQUEST_PB_H', true).
-record('ns.CreateGatewayRequest',
    % = 1, optional
    {gateway = undefined :: ns:'ns.Gateway'() | undefined}
).
-endif.

-ifndef('NS.GETGATEWAYREQUEST_PB_H').
-define('NS.GETGATEWAYREQUEST_PB_H', true).
-record('ns.GetGatewayRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETGATEWAYRESPONSE_PB_H').
-define('NS.GETGATEWAYRESPONSE_PB_H', true).
-record('ns.GetGatewayResponse',
    % = 1, optional
    {gateway = undefined :: ns:'ns.Gateway'() | undefined,
        % = 2, optional
        created_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        updated_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 4, optional
        first_seen_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 5, optional
        last_seen_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.UPDATEGATEWAYREQUEST_PB_H').
-define('NS.UPDATEGATEWAYREQUEST_PB_H', true).
-record('ns.UpdateGatewayRequest',
    % = 1, optional
    {gateway = undefined :: ns:'ns.Gateway'() | undefined}
).
-endif.

-ifndef('NS.DELETEGATEWAYREQUEST_PB_H').
-define('NS.DELETEGATEWAYREQUEST_PB_H', true).
-record('ns.DeleteGatewayRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GENERATEGATEWAYCLIENTCERTIFICATEREQUEST_PB_H').
-define('NS.GENERATEGATEWAYCLIENTCERTIFICATEREQUEST_PB_H', true).
-record('ns.GenerateGatewayClientCertificateRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GENERATEGATEWAYCLIENTCERTIFICATERESPONSE_PB_H').
-define('NS.GENERATEGATEWAYCLIENTCERTIFICATERESPONSE_PB_H', true).
-record('ns.GenerateGatewayClientCertificateResponse',
    % = 1, optional
    {tls_cert = <<>> :: iodata() | undefined,
        % = 2, optional
        tls_key = <<>> :: iodata() | undefined,
        % = 3, optional
        ca_cert = <<>> :: iodata() | undefined,
        % = 4, optional
        expires_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.GATEWAYSTATS_PB_H').
-define('NS.GATEWAYSTATS_PB_H', true).
-record('ns.GatewayStats',
    % = 1, optional
    {timestamp = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 2, optional, 32 bits
        rx_packets_received = 0 :: integer() | undefined,
        % = 3, optional, 32 bits
        rx_packets_received_ok = 0 :: integer() | undefined,
        % = 4, optional, 32 bits
        tx_packets_received = 0 :: integer() | undefined,
        % = 5, optional, 32 bits
        tx_packets_emitted = 0 :: integer() | undefined}
).
-endif.

-ifndef('NS.GETGATEWAYSTATSREQUEST_PB_H').
-define('NS.GETGATEWAYSTATSREQUEST_PB_H', true).
-record('ns.GetGatewayStatsRequest',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional, enum ns.AggregationInterval
        interval = 'SECOND' ::
            'SECOND'
            | 'MINUTE'
            | 'HOUR'
            | 'DAY'
            | 'WEEK'
            | 'MONTH'
            | 'QUARTER'
            | 'YEAR'
            | integer()
            | undefined,
        % = 3, optional
        start_timestamp = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 4, optional
        end_timestamp = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.GETGATEWAYSTATSRESPONSE_PB_H').
-define('NS.GETGATEWAYSTATSRESPONSE_PB_H', true).
-record('ns.GetGatewayStatsResponse',
    % = 1, repeated
    {result = [] :: [ns:'ns.GatewayStats'()] | undefined}
).
-endif.

-ifndef('NS.DEVICEQUEUEITEM_PB_H').
-define('NS.DEVICEQUEUEITEM_PB_H', true).
-record('ns.DeviceQueueItem',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, optional
        frm_payload = <<>> :: iodata() | undefined,
        % = 3, optional, 32 bits
        f_cnt = 0 :: non_neg_integer() | undefined,
        % = 4, optional, 32 bits
        f_port = 0 :: non_neg_integer() | undefined,
        % = 5, optional
        confirmed = false :: boolean() | 0 | 1 | undefined,
        % = 6, optional
        dev_addr = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.CREATEDEVICEQUEUEITEMREQUEST_PB_H').
-define('NS.CREATEDEVICEQUEUEITEMREQUEST_PB_H', true).
-record('ns.CreateDeviceQueueItemRequest',
    % = 1, optional
    {item = undefined :: ns:'ns.DeviceQueueItem'() | undefined}
).
-endif.

-ifndef('NS.FLUSHDEVICEQUEUEFORDEVEUIREQUEST_PB_H').
-define('NS.FLUSHDEVICEQUEUEFORDEVEUIREQUEST_PB_H', true).
-record('ns.FlushDeviceQueueForDevEUIRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETDEVICEQUEUEITEMSFORDEVEUIREQUEST_PB_H').
-define('NS.GETDEVICEQUEUEITEMSFORDEVEUIREQUEST_PB_H', true).
-record('ns.GetDeviceQueueItemsForDevEUIRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, optional
        count_only = false :: boolean() | 0 | 1 | undefined}
).
-endif.

-ifndef('NS.GETDEVICEQUEUEITEMSFORDEVEUIRESPONSE_PB_H').
-define('NS.GETDEVICEQUEUEITEMSFORDEVEUIRESPONSE_PB_H', true).
-record('ns.GetDeviceQueueItemsForDevEUIResponse',
    % = 1, repeated
    {items = [] :: [ns:'ns.DeviceQueueItem'()] | undefined,
        % = 2, optional, 32 bits
        total_count = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('NS.GETNEXTDOWNLINKFCNTFORDEVEUIREQUEST_PB_H').
-define('NS.GETNEXTDOWNLINKFCNTFORDEVEUIREQUEST_PB_H', true).
-record('ns.GetNextDownlinkFCntForDevEUIRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETNEXTDOWNLINKFCNTFORDEVEUIRESPONSE_PB_H').
-define('NS.GETNEXTDOWNLINKFCNTFORDEVEUIRESPONSE_PB_H', true).
-record('ns.GetNextDownlinkFCntForDevEUIResponse',
    % = 1, optional, 32 bits
    {f_cnt = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('NS.UPLINKFRAMELOG_PB_H').
-define('NS.UPLINKFRAMELOG_PB_H', true).
-record('ns.UplinkFrameLog',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: ns:'gw.UplinkTXInfo'() | undefined,
        % = 3, repeated
        rx_info = [] :: [ns:'gw.UplinkRXInfo'()] | undefined,
        % = 4, optional, enum common.MType
        m_type = 'JoinRequest' ::
            'JoinRequest'
            | 'JoinAccept'
            | 'UnconfirmedDataUp'
            | 'UnconfirmedDataDown'
            | 'ConfirmedDataUp'
            | 'ConfirmedDataDown'
            | 'RejoinRequest'
            | 'Proprietary'
            | integer()
            | undefined,
        % = 5, optional
        dev_addr = <<>> :: iodata() | undefined,
        % = 6, optional
        dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.DOWNLINKFRAMELOG_PB_H').
-define('NS.DOWNLINKFRAMELOG_PB_H', true).
-record('ns.DownlinkFrameLog',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: ns:'gw.DownlinkTXInfo'() | undefined,
        % = 3, optional, 32 bits
        token = 0 :: non_neg_integer() | undefined,
        % = 4, optional
        downlink_id = <<>> :: iodata() | undefined,
        % = 5, optional
        gateway_id = <<>> :: iodata() | undefined,
        % = 6, optional, enum common.MType
        m_type = 'JoinRequest' ::
            'JoinRequest'
            | 'JoinAccept'
            | 'UnconfirmedDataUp'
            | 'UnconfirmedDataDown'
            | 'ConfirmedDataUp'
            | 'ConfirmedDataDown'
            | 'RejoinRequest'
            | 'Proprietary'
            | integer()
            | undefined,
        % = 7, optional
        dev_addr = <<>> :: iodata() | undefined,
        % = 8, optional
        dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.STREAMFRAMELOGSFORGATEWAYREQUEST_PB_H').
-define('NS.STREAMFRAMELOGSFORGATEWAYREQUEST_PB_H', true).
-record('ns.StreamFrameLogsForGatewayRequest',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.STREAMFRAMELOGSFORGATEWAYRESPONSE_PB_H').
-define('NS.STREAMFRAMELOGSFORGATEWAYRESPONSE_PB_H', true).
-record('ns.StreamFrameLogsForGatewayResponse',
    % oneof
    {frame ::
            {uplink_frame_set, ns:'ns.UplinkFrameLog'()}
            | {downlink_frame, ns:'ns.DownlinkFrameLog'()}
            | undefined}
).
-endif.

-ifndef('NS.STREAMFRAMELOGSFORDEVICEREQUEST_PB_H').
-define('NS.STREAMFRAMELOGSFORDEVICEREQUEST_PB_H', true).
-record('ns.StreamFrameLogsForDeviceRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.STREAMFRAMELOGSFORDEVICERESPONSE_PB_H').
-define('NS.STREAMFRAMELOGSFORDEVICERESPONSE_PB_H', true).
-record('ns.StreamFrameLogsForDeviceResponse',
    % oneof
    {frame ::
            {uplink_frame_set, ns:'ns.UplinkFrameLog'()}
            | {downlink_frame, ns:'ns.DownlinkFrameLog'()}
            | undefined}
).
-endif.

-ifndef('NS.GETVERSIONRESPONSE_PB_H').
-define('NS.GETVERSIONRESPONSE_PB_H', true).
-record('ns.GetVersionResponse',
    % = 1, optional
    {version = [] :: unicode:chardata() | undefined,
        % = 2, optional, enum common.Region
        region = 'EU868' ::
            'EU868'
            | 'US915'
            | 'CN779'
            | 'EU433'
            | 'AU915'
            | 'CN470'
            | 'AS923'
            | 'KR920'
            | 'IN865'
            | 'RU864'
            | integer()
            | undefined}
).
-endif.

-ifndef('NS.GATEWAYPROFILE_PB_H').
-define('NS.GATEWAYPROFILE_PB_H', true).
-record('ns.GatewayProfile',
    % = 1, optional
    {id = <<>> :: iodata() | undefined,
        % = 2, repeated, 32 bits
        channels = [] :: [non_neg_integer()] | undefined,
        % = 3, repeated
        extra_channels = [] :: [ns:'ns.GatewayProfileExtraChannel'()] | undefined,
        % = 4, optional
        stats_interval = undefined :: ns:'google.protobuf.Duration'() | undefined}
).
-endif.

-ifndef('NS.GATEWAYPROFILEEXTRACHANNEL_PB_H').
-define('NS.GATEWAYPROFILEEXTRACHANNEL_PB_H', true).
-record('ns.GatewayProfileExtraChannel',
    % = 1, optional, enum common.Modulation
    {modulation = 'LORA' :: 'LORA' | 'FSK' | integer() | undefined,
        % = 2, optional, 32 bits
        frequency = 0 :: non_neg_integer() | undefined,
        % = 3, optional, 32 bits
        bandwidth = 0 :: non_neg_integer() | undefined,
        % = 4, optional, 32 bits
        bitrate = 0 :: non_neg_integer() | undefined,
        % = 5, repeated, 32 bits
        spreading_factors = [] :: [non_neg_integer()] | undefined}
).
-endif.

-ifndef('NS.CREATEGATEWAYPROFILEREQUEST_PB_H').
-define('NS.CREATEGATEWAYPROFILEREQUEST_PB_H', true).
-record('ns.CreateGatewayProfileRequest',
    % = 1, optional
    {gateway_profile = undefined :: ns:'ns.GatewayProfile'() | undefined}
).
-endif.

-ifndef('NS.CREATEGATEWAYPROFILERESPONSE_PB_H').
-define('NS.CREATEGATEWAYPROFILERESPONSE_PB_H', true).
-record('ns.CreateGatewayProfileResponse',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETGATEWAYPROFILEREQUEST_PB_H').
-define('NS.GETGATEWAYPROFILEREQUEST_PB_H', true).
-record('ns.GetGatewayProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETGATEWAYPROFILERESPONSE_PB_H').
-define('NS.GETGATEWAYPROFILERESPONSE_PB_H', true).
-record('ns.GetGatewayProfileResponse',
    % = 1, optional
    {gateway_profile = undefined :: ns:'ns.GatewayProfile'() | undefined,
        % = 2, optional
        created_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        updated_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.UPDATEGATEWAYPROFILEREQUEST_PB_H').
-define('NS.UPDATEGATEWAYPROFILEREQUEST_PB_H', true).
-record('ns.UpdateGatewayProfileRequest',
    % = 1, optional
    {gateway_profile = undefined :: ns:'ns.GatewayProfile'() | undefined}
).
-endif.

-ifndef('NS.DELETEGATEWAYPROFILEREQUEST_PB_H').
-define('NS.DELETEGATEWAYPROFILEREQUEST_PB_H', true).
-record('ns.DeleteGatewayProfileRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.MULTICASTGROUP_PB_H').
-define('NS.MULTICASTGROUP_PB_H', true).
-record('ns.MulticastGroup',
    % = 1, optional
    {id = <<>> :: iodata() | undefined,
        % = 2, optional
        mc_addr = <<>> :: iodata() | undefined,
        % = 3, optional
        mc_nwk_s_key = <<>> :: iodata() | undefined,
        % = 4, optional, 32 bits
        f_cnt = 0 :: non_neg_integer() | undefined,
        % = 5, optional, enum ns.MulticastGroupType
        group_type = 'CLASS_C' :: 'CLASS_C' | 'CLASS_B' | integer() | undefined,
        % = 6, optional, 32 bits
        dr = 0 :: non_neg_integer() | undefined,
        % = 7, optional, 32 bits
        frequency = 0 :: non_neg_integer() | undefined,
        % = 8, optional, 32 bits
        ping_slot_period = 0 :: non_neg_integer() | undefined,
        % = 9, optional
        service_profile_id = <<>> :: iodata() | undefined,
        % = 10, optional
        routing_profile_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.CREATEMULTICASTGROUPREQUEST_PB_H').
-define('NS.CREATEMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.CreateMulticastGroupRequest',
    % = 1, optional
    {multicast_group = undefined :: ns:'ns.MulticastGroup'() | undefined}
).
-endif.

-ifndef('NS.CREATEMULTICASTGROUPRESPONSE_PB_H').
-define('NS.CREATEMULTICASTGROUPRESPONSE_PB_H', true).
-record('ns.CreateMulticastGroupResponse',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETMULTICASTGROUPREQUEST_PB_H').
-define('NS.GETMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.GetMulticastGroupRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETMULTICASTGROUPRESPONSE_PB_H').
-define('NS.GETMULTICASTGROUPRESPONSE_PB_H', true).
-record('ns.GetMulticastGroupResponse',
    % = 1, optional
    {multicast_group = undefined :: ns:'ns.MulticastGroup'() | undefined,
        % = 2, optional
        created_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        updated_at = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('NS.UPDATEMULTICASTGROUPREQUEST_PB_H').
-define('NS.UPDATEMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.UpdateMulticastGroupRequest',
    % = 1, optional
    {multicast_group = undefined :: ns:'ns.MulticastGroup'() | undefined}
).
-endif.

-ifndef('NS.DELETEMULTICASTGROUPREQUEST_PB_H').
-define('NS.DELETEMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.DeleteMulticastGroupRequest',
    % = 1, optional
    {id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.ADDDEVICETOMULTICASTGROUPREQUEST_PB_H').
-define('NS.ADDDEVICETOMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.AddDeviceToMulticastGroupRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, optional
        multicast_group_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.REMOVEDEVICEFROMMULTICASTGROUPREQUEST_PB_H').
-define('NS.REMOVEDEVICEFROMMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.RemoveDeviceFromMulticastGroupRequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, optional
        multicast_group_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.MULTICASTQUEUEITEM_PB_H').
-define('NS.MULTICASTQUEUEITEM_PB_H', true).
-record('ns.MulticastQueueItem',
    % = 1, optional
    {multicast_group_id = <<>> :: iodata() | undefined,
        % = 2, optional, 32 bits
        f_cnt = 0 :: non_neg_integer() | undefined,
        % = 3, optional, 32 bits
        f_port = 0 :: non_neg_integer() | undefined,
        % = 4, optional
        frm_payload = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.ENQUEUEMULTICASTQUEUEITEMREQUEST_PB_H').
-define('NS.ENQUEUEMULTICASTQUEUEITEMREQUEST_PB_H', true).
-record('ns.EnqueueMulticastQueueItemRequest',
    % = 1, optional
    {multicast_queue_item = undefined :: ns:'ns.MulticastQueueItem'() | undefined}
).
-endif.

-ifndef('NS.FLUSHMULTICASTQUEUEFORMULTICASTGROUPREQUEST_PB_H').
-define('NS.FLUSHMULTICASTQUEUEFORMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.FlushMulticastQueueForMulticastGroupRequest',
    % = 1, optional
    {multicast_group_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETMULTICASTQUEUEITEMSFORMULTICASTGROUPREQUEST_PB_H').
-define('NS.GETMULTICASTQUEUEITEMSFORMULTICASTGROUPREQUEST_PB_H', true).
-record('ns.GetMulticastQueueItemsForMulticastGroupRequest',
    % = 1, optional
    {multicast_group_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('NS.GETMULTICASTQUEUEITEMSFORMULTICASTGROUPRESPONSE_PB_H').
-define('NS.GETMULTICASTQUEUEITEMSFORMULTICASTGROUPRESPONSE_PB_H', true).
-record('ns.GetMulticastQueueItemsForMulticastGroupResponse',
    % = 1, repeated
    {multicast_queue_items = [] :: [ns:'ns.MulticastQueueItem'()] | undefined}
).
-endif.

-ifndef('NS.GETADRALGORITHMSRESPONSE_PB_H').
-define('NS.GETADRALGORITHMSRESPONSE_PB_H', true).
-record('ns.GetADRAlgorithmsResponse',
    % = 1, repeated
    {adr_algorithms = [] :: [ns:'ns.ADRAlgorithm'()] | undefined}
).
-endif.

-ifndef('NS.ADRALGORITHM_PB_H').
-define('NS.ADRALGORITHM_PB_H', true).
-record('ns.ADRAlgorithm',
    % = 1, optional
    {id = [] :: unicode:chardata() | undefined,
        % = 2, optional
        name = [] :: unicode:chardata() | undefined}
).
-endif.

-ifndef('GOOGLE.PROTOBUF.TIMESTAMP_PB_H').
-define('GOOGLE.PROTOBUF.TIMESTAMP_PB_H', true).
-record('google.protobuf.Timestamp',
    % = 1, optional, 64 bits
    {seconds = 0 :: integer() | undefined,
        % = 2, optional, 32 bits
        nanos = 0 :: integer() | undefined}
).
-endif.

-ifndef('GOOGLE.PROTOBUF.DURATION_PB_H').
-define('GOOGLE.PROTOBUF.DURATION_PB_H', true).
-record('google.protobuf.Duration',
    % = 1, optional, 64 bits
    {seconds = 0 :: integer() | undefined,
        % = 2, optional, 32 bits
        nanos = 0 :: integer() | undefined}
).
-endif.

-ifndef('GOOGLE.PROTOBUF.EMPTY_PB_H').
-define('GOOGLE.PROTOBUF.EMPTY_PB_H', true).
-record('google.protobuf.Empty', {}).
-endif.

-ifndef('COMMON.KEYENVELOPE_PB_H').
-define('COMMON.KEYENVELOPE_PB_H', true).
-record('common.KeyEnvelope',
    % = 1, optional
    {kek_label = [] :: unicode:chardata() | undefined,
        % = 2, optional
        aes_key = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('COMMON.LOCATION_PB_H').
-define('COMMON.LOCATION_PB_H', true).
-record('common.Location',
    % = 1, optional
    {latitude = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 2, optional
        longitude = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 3, optional
        altitude = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 4, optional, enum common.LocationSource
        source = 'UNKNOWN' ::
            'UNKNOWN'
            | 'GPS'
            | 'CONFIG'
            | 'GEO_RESOLVER_TDOA'
            | 'GEO_RESOLVER_RSSI'
            | 'GEO_RESOLVER_GNSS'
            | 'GEO_RESOLVER_WIFI'
            | integer()
            | undefined,
        % = 5, optional, 32 bits
        accuracy = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GW.UPLINKTXINFO_PB_H').
-define('GW.UPLINKTXINFO_PB_H', true).
-record('gw.UplinkTXInfo',
    % = 1, optional, 32 bits
    {frequency = 0 :: non_neg_integer() | undefined,
        % = 2, optional, enum common.Modulation
        modulation = 'LORA' :: 'LORA' | 'FSK' | integer() | undefined,
        % oneof
        modulation_info ::
            {lora_modulation_info, ns:'gw.LoRaModulationInfo'()}
            | {fsk_modulation_info, ns:'gw.FSKModulationInfo'()}
            | undefined}
).
-endif.

-ifndef('GW.LORAMODULATIONINFO_PB_H').
-define('GW.LORAMODULATIONINFO_PB_H', true).
-record('gw.LoRaModulationInfo',
    % = 1, optional, 32 bits
    {bandwidth = 0 :: non_neg_integer() | undefined,
        % = 2, optional, 32 bits
        spreading_factor = 0 :: non_neg_integer() | undefined,
        % = 3, optional
        code_rate = [] :: unicode:chardata() | undefined,
        % = 4, optional
        polarization_inversion = false :: boolean() | 0 | 1 | undefined}
).
-endif.

-ifndef('GW.FSKMODULATIONINFO_PB_H').
-define('GW.FSKMODULATIONINFO_PB_H', true).
-record('gw.FSKModulationInfo',
    % = 1, optional, 32 bits
    {frequency_deviation = 0 :: non_neg_integer() | undefined,
        % = 2, optional, 32 bits
        datarate = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GW.ENCRYPTEDFINETIMESTAMP_PB_H').
-define('GW.ENCRYPTEDFINETIMESTAMP_PB_H', true).
-record('gw.EncryptedFineTimestamp',
    % = 1, optional, 32 bits
    {aes_key_index = 0 :: non_neg_integer() | undefined,
        % = 2, optional
        encrypted_ns = <<>> :: iodata() | undefined,
        % = 3, optional
        fpga_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.PLAINFINETIMESTAMP_PB_H').
-define('GW.PLAINFINETIMESTAMP_PB_H', true).
-record('gw.PlainFineTimestamp',
    % = 1, optional
    {time = undefined :: ns:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('GW.GATEWAYSTATS_PB_H').
-define('GW.GATEWAYSTATS_PB_H', true).
-record('gw.GatewayStats',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 9, optional
        ip = [] :: unicode:chardata() | undefined,
        % = 2, optional
        time = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        location = undefined :: ns:'common.Location'() | undefined,
        % = 4, optional
        config_version = [] :: unicode:chardata() | undefined,
        % = 5, optional, 32 bits
        rx_packets_received = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        rx_packets_received_ok = 0 :: non_neg_integer() | undefined,
        % = 7, optional, 32 bits
        tx_packets_received = 0 :: non_neg_integer() | undefined,
        % = 8, optional, 32 bits
        tx_packets_emitted = 0 :: non_neg_integer() | undefined,
        % = 10
        meta_data = [] :: [{unicode:chardata(), unicode:chardata()}] | undefined,
        % = 11, optional
        stats_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.UPLINKRXINFO_PB_H').
-define('GW.UPLINKRXINFO_PB_H', true).
-record('gw.UplinkRXInfo',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        time = undefined :: ns:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        time_since_gps_epoch = undefined :: ns:'google.protobuf.Duration'() | undefined,
        % = 5, optional, 32 bits
        rssi = 0 :: integer() | undefined,
        % = 6, optional
        lora_snr = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 7, optional, 32 bits
        channel = 0 :: non_neg_integer() | undefined,
        % = 8, optional, 32 bits
        rf_chain = 0 :: non_neg_integer() | undefined,
        % = 9, optional, 32 bits
        board = 0 :: non_neg_integer() | undefined,
        % = 10, optional, 32 bits
        antenna = 0 :: non_neg_integer() | undefined,
        % = 11, optional
        location = undefined :: ns:'common.Location'() | undefined,
        % = 12, optional, enum gw.FineTimestampType
        fine_timestamp_type = 'NONE' :: 'NONE' | 'ENCRYPTED' | 'PLAIN' | integer() | undefined,
        % oneof
        fine_timestamp ::
            {encrypted_fine_timestamp, ns:'gw.EncryptedFineTimestamp'()}
            | {plain_fine_timestamp, ns:'gw.PlainFineTimestamp'()}
            | undefined,
        % = 15, optional
        context = <<>> :: iodata() | undefined,
        % = 16, optional
        uplink_id = <<>> :: iodata() | undefined,
        % = 17, optional, enum gw.CRCStatus
        crc_status = 'NO_CRC' :: 'NO_CRC' | 'BAD_CRC' | 'CRC_OK' | integer() | undefined}
).
-endif.

-ifndef('GW.DOWNLINKTXINFO_PB_H').
-define('GW.DOWNLINKTXINFO_PB_H', true).
-record('gw.DownlinkTXInfo',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 5, optional, 32 bits
        frequency = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        power = 0 :: integer() | undefined,
        % = 7, optional, enum common.Modulation
        modulation = 'LORA' :: 'LORA' | 'FSK' | integer() | undefined,
        % oneof
        modulation_info ::
            {lora_modulation_info, ns:'gw.LoRaModulationInfo'()}
            | {fsk_modulation_info, ns:'gw.FSKModulationInfo'()}
            | undefined,
        % = 10, optional, 32 bits
        board = 0 :: non_neg_integer() | undefined,
        % = 11, optional, 32 bits
        antenna = 0 :: non_neg_integer() | undefined,
        % = 12, optional, enum gw.DownlinkTiming
        timing = 'IMMEDIATELY' :: 'IMMEDIATELY' | 'DELAY' | 'GPS_EPOCH' | integer() | undefined,
        % oneof
        timing_info ::
            {immediately_timing_info, ns:'gw.ImmediatelyTimingInfo'()}
            | {delay_timing_info, ns:'gw.DelayTimingInfo'()}
            | {gps_epoch_timing_info, ns:'gw.GPSEpochTimingInfo'()}
            | undefined,
        % = 16, optional
        context = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.IMMEDIATELYTIMINGINFO_PB_H').
-define('GW.IMMEDIATELYTIMINGINFO_PB_H', true).
-record('gw.ImmediatelyTimingInfo', {}).
-endif.

-ifndef('GW.DELAYTIMINGINFO_PB_H').
-define('GW.DELAYTIMINGINFO_PB_H', true).
-record('gw.DelayTimingInfo',
    % = 1, optional
    {delay = undefined :: ns:'google.protobuf.Duration'() | undefined}
).
-endif.

-ifndef('GW.GPSEPOCHTIMINGINFO_PB_H').
-define('GW.GPSEPOCHTIMINGINFO_PB_H', true).
-record('gw.GPSEpochTimingInfo',
    % = 1, optional
    {time_since_gps_epoch = undefined :: ns:'google.protobuf.Duration'() | undefined}
).
-endif.

-ifndef('GW.UPLINKFRAME_PB_H').
-define('GW.UPLINKFRAME_PB_H', true).
-record('gw.UplinkFrame',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: ns:'gw.UplinkTXInfo'() | undefined,
        % = 3, optional
        rx_info = undefined :: ns:'gw.UplinkRXInfo'() | undefined}
).
-endif.

-ifndef('GW.UPLINKFRAMESET_PB_H').
-define('GW.UPLINKFRAMESET_PB_H', true).
-record('gw.UplinkFrameSet',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: ns:'gw.UplinkTXInfo'() | undefined,
        % = 3, repeated
        rx_info = [] :: [ns:'gw.UplinkRXInfo'()] | undefined}
).
-endif.

-ifndef('GW.DOWNLINKFRAME_PB_H').
-define('GW.DOWNLINKFRAME_PB_H', true).
-record('gw.DownlinkFrame',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: ns:'gw.DownlinkTXInfo'() | undefined,
        % = 3, optional, 32 bits
        token = 0 :: non_neg_integer() | undefined,
        % = 4, optional
        downlink_id = <<>> :: iodata() | undefined,
        % = 5, repeated
        items = [] :: [ns:'gw.DownlinkFrameItem'()] | undefined,
        % = 6, optional
        gateway_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.DOWNLINKFRAMEITEM_PB_H').
-define('GW.DOWNLINKFRAMEITEM_PB_H', true).
-record('gw.DownlinkFrameItem',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: ns:'gw.DownlinkTXInfo'() | undefined}
).
-endif.

-ifndef('GW.DOWNLINKTXACK_PB_H').
-define('GW.DOWNLINKTXACK_PB_H', true).
-record('gw.DownlinkTXAck',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional, 32 bits
        token = 0 :: non_neg_integer() | undefined,
        % = 3, optional
        error = [] :: unicode:chardata() | undefined,
        % = 4, optional
        downlink_id = <<>> :: iodata() | undefined,
        % = 5, repeated
        items = [] :: [ns:'gw.DownlinkTXAckItem'()] | undefined}
).
-endif.

-ifndef('GW.DOWNLINKTXACKITEM_PB_H').
-define('GW.DOWNLINKTXACKITEM_PB_H', true).
-record('gw.DownlinkTXAckItem',
    % = 1, optional, enum gw.TxAckStatus
    {status = 'IGNORED' ::
            'IGNORED'
            | 'OK'
            | 'TOO_LATE'
            | 'TOO_EARLY'
            | 'COLLISION_PACKET'
            | 'COLLISION_BEACON'
            | 'TX_FREQ'
            | 'TX_POWER'
            | 'GPS_UNLOCKED'
            | 'QUEUE_FULL'
            | 'INTERNAL_ERROR'
            | integer()
            | undefined}
).
-endif.

-ifndef('GW.GATEWAYCONFIGURATION_PB_H').
-define('GW.GATEWAYCONFIGURATION_PB_H', true).
-record('gw.GatewayConfiguration',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        version = [] :: unicode:chardata() | undefined,
        % = 3, repeated
        channels = [] :: [ns:'gw.ChannelConfiguration'()] | undefined,
        % = 4, optional
        stats_interval = undefined :: ns:'google.protobuf.Duration'() | undefined}
).
-endif.

-ifndef('GW.CHANNELCONFIGURATION_PB_H').
-define('GW.CHANNELCONFIGURATION_PB_H', true).
-record('gw.ChannelConfiguration',
    % = 1, optional, 32 bits
    {frequency = 0 :: non_neg_integer() | undefined,
        % = 2, optional, enum common.Modulation
        modulation = 'LORA' :: 'LORA' | 'FSK' | integer() | undefined,
        % oneof
        modulation_config ::
            {lora_modulation_config, ns:'gw.LoRaModulationConfig'()}
            | {fsk_modulation_config, ns:'gw.FSKModulationConfig'()}
            | undefined,
        % = 5, optional, 32 bits
        board = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        demodulator = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GW.LORAMODULATIONCONFIG_PB_H').
-define('GW.LORAMODULATIONCONFIG_PB_H', true).
-record('gw.LoRaModulationConfig',
    % = 1, optional, 32 bits
    {bandwidth = 0 :: non_neg_integer() | undefined,
        % = 2, repeated, 32 bits
        spreading_factors = [] :: [non_neg_integer()] | undefined}
).
-endif.

-ifndef('GW.FSKMODULATIONCONFIG_PB_H').
-define('GW.FSKMODULATIONCONFIG_PB_H', true).
-record('gw.FSKModulationConfig',
    % = 1, optional, 32 bits
    {bandwidth = 0 :: non_neg_integer() | undefined,
        % = 2, optional, 32 bits
        bitrate = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GW.GATEWAYCOMMANDEXECREQUEST_PB_H').
-define('GW.GATEWAYCOMMANDEXECREQUEST_PB_H', true).
-record('gw.GatewayCommandExecRequest',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        command = [] :: unicode:chardata() | undefined,
        % = 3, optional
        'ExecId' = <<>> :: iodata() | undefined,
        % = 4, optional
        stdin = <<>> :: iodata() | undefined,
        % = 5
        environment = [] :: [{unicode:chardata(), unicode:chardata()}] | undefined}
).
-endif.

-ifndef('GW.GATEWAYCOMMANDEXECRESPONSE_PB_H').
-define('GW.GATEWAYCOMMANDEXECRESPONSE_PB_H', true).
-record('gw.GatewayCommandExecResponse',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        exec_id = <<>> :: iodata() | undefined,
        % = 3, optional
        stdout = <<>> :: iodata() | undefined,
        % = 4, optional
        stderr = <<>> :: iodata() | undefined,
        % = 5, optional
        error = [] :: unicode:chardata() | undefined}
).
-endif.

-ifndef('GW.RAWPACKETFORWARDEREVENT_PB_H').
-define('GW.RAWPACKETFORWARDEREVENT_PB_H', true).
-record('gw.RawPacketForwarderEvent',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        raw_id = <<>> :: iodata() | undefined,
        % = 3, optional
        payload = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.RAWPACKETFORWARDERCOMMAND_PB_H').
-define('GW.RAWPACKETFORWARDERCOMMAND_PB_H', true).
-record('gw.RawPacketForwarderCommand',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        raw_id = <<>> :: iodata() | undefined,
        % = 3, optional
        payload = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.CONNSTATE_PB_H').
-define('GW.CONNSTATE_PB_H', true).
-record('gw.ConnState',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional, enum gw.ConnState.State
        state = 'OFFLINE' :: 'OFFLINE' | 'ONLINE' | integer() | undefined}
).
-endif.

-ifndef('NS.SERVICEPROFILE_PB_H').
-define('NS.SERVICEPROFILE_PB_H', true).
-record('ns.ServiceProfile',
    % = 1, optional
    {id = <<>> :: iodata() | undefined,
        % = 2, optional, 32 bits
        ul_rate = 0 :: non_neg_integer() | undefined,
        % = 3, optional, 32 bits
        ul_bucket_size = 0 :: non_neg_integer() | undefined,
        % = 4, optional, enum ns.RatePolicy
        ul_rate_policy = 'DROP' :: 'DROP' | 'MARK' | integer() | undefined,
        % = 5, optional, 32 bits
        dl_rate = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        dl_bucket_size = 0 :: non_neg_integer() | undefined,
        % = 7, optional, enum ns.RatePolicy
        dl_rate_policy = 'DROP' :: 'DROP' | 'MARK' | integer() | undefined,
        % = 8, optional
        add_gw_metadata = false :: boolean() | 0 | 1 | undefined,
        % = 9, optional, 32 bits
        dev_status_req_freq = 0 :: non_neg_integer() | undefined,
        % = 10, optional
        report_dev_status_battery = false :: boolean() | 0 | 1 | undefined,
        % = 11, optional
        report_dev_status_margin = false :: boolean() | 0 | 1 | undefined,
        % = 12, optional, 32 bits
        dr_min = 0 :: non_neg_integer() | undefined,
        % = 13, optional, 32 bits
        dr_max = 0 :: non_neg_integer() | undefined,
        % = 14, optional
        channel_mask = <<>> :: iodata() | undefined,
        % = 15, optional
        pr_allowed = false :: boolean() | 0 | 1 | undefined,
        % = 16, optional
        hr_allowed = false :: boolean() | 0 | 1 | undefined,
        % = 17, optional
        ra_allowed = false :: boolean() | 0 | 1 | undefined,
        % = 18, optional
        nwk_geo_loc = false :: boolean() | 0 | 1 | undefined,
        % = 19, optional, 32 bits
        target_per = 0 :: non_neg_integer() | undefined,
        % = 20, optional, 32 bits
        min_gw_diversity = 0 :: non_neg_integer() | undefined,
        % = 21, optional
        gws_private = false :: boolean() | 0 | 1 | undefined}
).
-endif.

-ifndef('NS.DEVICEPROFILE_PB_H').
-define('NS.DEVICEPROFILE_PB_H', true).
-record('ns.DeviceProfile',
    % = 1, optional
    {id = <<>> :: iodata() | undefined,
        % = 2, optional
        supports_class_b = false :: boolean() | 0 | 1 | undefined,
        % = 3, optional, 32 bits
        class_b_timeout = 0 :: non_neg_integer() | undefined,
        % = 4, optional, 32 bits
        ping_slot_period = 0 :: non_neg_integer() | undefined,
        % = 5, optional, 32 bits
        ping_slot_dr = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        ping_slot_freq = 0 :: non_neg_integer() | undefined,
        % = 7, optional
        supports_class_c = false :: boolean() | 0 | 1 | undefined,
        % = 8, optional, 32 bits
        class_c_timeout = 0 :: non_neg_integer() | undefined,
        % = 9, optional
        mac_version = [] :: unicode:chardata() | undefined,
        % = 10, optional
        reg_params_revision = [] :: unicode:chardata() | undefined,
        % = 11, optional, 32 bits
        rx_delay_1 = 0 :: non_neg_integer() | undefined,
        % = 12, optional, 32 bits
        rx_dr_offset_1 = 0 :: non_neg_integer() | undefined,
        % = 13, optional, 32 bits
        rx_datarate_2 = 0 :: non_neg_integer() | undefined,
        % = 14, optional, 32 bits
        rx_freq_2 = 0 :: non_neg_integer() | undefined,
        % = 15, repeated, 32 bits
        factory_preset_freqs = [] :: [non_neg_integer()] | undefined,
        % = 16, optional, 32 bits
        max_eirp = 0 :: non_neg_integer() | undefined,
        % = 17, optional, 32 bits
        max_duty_cycle = 0 :: non_neg_integer() | undefined,
        % = 18, optional
        supports_join = false :: boolean() | 0 | 1 | undefined,
        % = 19, optional
        rf_region = [] :: unicode:chardata() | undefined,
        % = 20, optional
        supports_32bit_f_cnt = false :: boolean() | 0 | 1 | undefined,
        % = 21, optional
        adr_algorithm_id = [] :: unicode:chardata() | undefined}
).
-endif.

-ifndef('NS.ROUTINGPROFILE_PB_H').
-define('NS.ROUTINGPROFILE_PB_H', true).
-record('ns.RoutingProfile',
    % = 1, optional
    {id = <<>> :: iodata() | undefined,
        % = 2, optional
        as_id = [] :: unicode:chardata() | undefined,
        % = 3, optional
        ca_cert = [] :: unicode:chardata() | undefined,
        % = 4, optional
        tls_cert = [] :: unicode:chardata() | undefined,
        % = 5, optional
        tls_key = [] :: unicode:chardata() | undefined}
).
-endif.

-endif.

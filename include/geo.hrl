%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.17.0

-ifndef(geo).
-define(geo, true).

-define(geo_gpb_version, "4.17.0").

-ifndef('GEO.RESOLVERESULT_PB_H').
-define('GEO.RESOLVERESULT_PB_H', true).
-record('geo.ResolveResult',
    % = 1, optional
    {location = undefined :: geo:'common.Location'() | undefined}
).
-endif.

-ifndef('GEO.FRAMERXINFO_PB_H').
-define('GEO.FRAMERXINFO_PB_H', true).
-record('geo.FrameRXInfo',
    % = 1, repeated
    {rx_info = [] :: [geo:'gw.UplinkRXInfo'()] | undefined}
).
-endif.

-ifndef('GEO.RESOLVETDOAREQUEST_PB_H').
-define('GEO.RESOLVETDOAREQUEST_PB_H', true).
-record('geo.ResolveTDOARequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, optional
        frame_rx_info = undefined :: geo:'geo.FrameRXInfo'() | undefined,
        % = 3, optional
        device_reference_altitude = 0.0 ::
            float() | integer() | infinity | '-infinity' | nan | undefined}
).
-endif.

-ifndef('GEO.RESOLVEMULTIFRAMETDOAREQUEST_PB_H').
-define('GEO.RESOLVEMULTIFRAMETDOAREQUEST_PB_H', true).
-record('geo.ResolveMultiFrameTDOARequest',
    % = 1, optional
    {dev_eui = <<>> :: iodata() | undefined,
        % = 2, repeated
        frame_rx_info_set = [] :: [geo:'geo.FrameRXInfo'()] | undefined,
        % = 3, optional
        device_reference_altitude = 0.0 ::
            float() | integer() | infinity | '-infinity' | nan | undefined}
).
-endif.

-ifndef('GEO.RESOLVETDOARESPONSE_PB_H').
-define('GEO.RESOLVETDOARESPONSE_PB_H', true).
-record('geo.ResolveTDOAResponse',
    % = 1, optional
    {result = undefined :: geo:'geo.ResolveResult'() | undefined}
).
-endif.

-ifndef('GEO.RESOLVEMULTIFRAMETDOARESPONSE_PB_H').
-define('GEO.RESOLVEMULTIFRAMETDOARESPONSE_PB_H', true).
-record('geo.ResolveMultiFrameTDOAResponse',
    % = 1, optional
    {result = undefined :: geo:'geo.ResolveResult'() | undefined}
).
-endif.

-ifndef('GW.UPLINKTXINFO_PB_H').
-define('GW.UPLINKTXINFO_PB_H', true).
-record('gw.UplinkTXInfo',
    % = 1, optional, 32 bits
    {frequency = 0 :: non_neg_integer() | undefined,
        % = 2, optional, enum common.Modulation
        modulation = 'LORA' :: 'LORA' | 'FSK' | integer() | undefined,
        % oneof
        modulation_info ::
            {lora_modulation_info, geo:'gw.LoRaModulationInfo'()}
            | {fsk_modulation_info, geo:'gw.FSKModulationInfo'()}
            | undefined}
).
-endif.

-ifndef('GW.LORAMODULATIONINFO_PB_H').
-define('GW.LORAMODULATIONINFO_PB_H', true).
-record('gw.LoRaModulationInfo',
    % = 1, optional, 32 bits
    {bandwidth = 0 :: non_neg_integer() | undefined,
        % = 2, optional, 32 bits
        spreading_factor = 0 :: non_neg_integer() | undefined,
        % = 3, optional
        code_rate = [] :: unicode:chardata() | undefined,
        % = 4, optional
        polarization_inversion = false :: boolean() | 0 | 1 | undefined}
).
-endif.

-ifndef('GW.FSKMODULATIONINFO_PB_H').
-define('GW.FSKMODULATIONINFO_PB_H', true).
-record('gw.FSKModulationInfo',
    % = 1, optional, 32 bits
    {frequency_deviation = 0 :: non_neg_integer() | undefined,
        % = 2, optional, 32 bits
        datarate = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GW.ENCRYPTEDFINETIMESTAMP_PB_H').
-define('GW.ENCRYPTEDFINETIMESTAMP_PB_H', true).
-record('gw.EncryptedFineTimestamp',
    % = 1, optional, 32 bits
    {aes_key_index = 0 :: non_neg_integer() | undefined,
        % = 2, optional
        encrypted_ns = <<>> :: iodata() | undefined,
        % = 3, optional
        fpga_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.PLAINFINETIMESTAMP_PB_H').
-define('GW.PLAINFINETIMESTAMP_PB_H', true).
-record('gw.PlainFineTimestamp',
    % = 1, optional
    {time = undefined :: geo:'google.protobuf.Timestamp'() | undefined}
).
-endif.

-ifndef('GW.GATEWAYSTATS_PB_H').
-define('GW.GATEWAYSTATS_PB_H', true).
-record('gw.GatewayStats',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 9, optional
        ip = [] :: unicode:chardata() | undefined,
        % = 2, optional
        time = undefined :: geo:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        location = undefined :: geo:'common.Location'() | undefined,
        % = 4, optional
        config_version = [] :: unicode:chardata() | undefined,
        % = 5, optional, 32 bits
        rx_packets_received = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        rx_packets_received_ok = 0 :: non_neg_integer() | undefined,
        % = 7, optional, 32 bits
        tx_packets_received = 0 :: non_neg_integer() | undefined,
        % = 8, optional, 32 bits
        tx_packets_emitted = 0 :: non_neg_integer() | undefined,
        % = 10
        meta_data = [] :: [{unicode:chardata(), unicode:chardata()}] | undefined,
        % = 11, optional
        stats_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.UPLINKRXINFO_PB_H').
-define('GW.UPLINKRXINFO_PB_H', true).
-record('gw.UplinkRXInfo',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        time = undefined :: geo:'google.protobuf.Timestamp'() | undefined,
        % = 3, optional
        time_since_gps_epoch = undefined :: geo:'google.protobuf.Duration'() | undefined,
        % = 5, optional, 32 bits
        rssi = 0 :: integer() | undefined,
        % = 6, optional
        lora_snr = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 7, optional, 32 bits
        channel = 0 :: non_neg_integer() | undefined,
        % = 8, optional, 32 bits
        rf_chain = 0 :: non_neg_integer() | undefined,
        % = 9, optional, 32 bits
        board = 0 :: non_neg_integer() | undefined,
        % = 10, optional, 32 bits
        antenna = 0 :: non_neg_integer() | undefined,
        % = 11, optional
        location = undefined :: geo:'common.Location'() | undefined,
        % = 12, optional, enum gw.FineTimestampType
        fine_timestamp_type = 'NONE' :: 'NONE' | 'ENCRYPTED' | 'PLAIN' | integer() | undefined,
        % oneof
        fine_timestamp ::
            {encrypted_fine_timestamp, geo:'gw.EncryptedFineTimestamp'()}
            | {plain_fine_timestamp, geo:'gw.PlainFineTimestamp'()}
            | undefined,
        % = 15, optional
        context = <<>> :: iodata() | undefined,
        % = 16, optional
        uplink_id = <<>> :: iodata() | undefined,
        % = 17, optional, enum gw.CRCStatus
        crc_status = 'NO_CRC' :: 'NO_CRC' | 'BAD_CRC' | 'CRC_OK' | integer() | undefined}
).
-endif.

-ifndef('GW.DOWNLINKTXINFO_PB_H').
-define('GW.DOWNLINKTXINFO_PB_H', true).
-record('gw.DownlinkTXInfo',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 5, optional, 32 bits
        frequency = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        power = 0 :: integer() | undefined,
        % = 7, optional, enum common.Modulation
        modulation = 'LORA' :: 'LORA' | 'FSK' | integer() | undefined,
        % oneof
        modulation_info ::
            {lora_modulation_info, geo:'gw.LoRaModulationInfo'()}
            | {fsk_modulation_info, geo:'gw.FSKModulationInfo'()}
            | undefined,
        % = 10, optional, 32 bits
        board = 0 :: non_neg_integer() | undefined,
        % = 11, optional, 32 bits
        antenna = 0 :: non_neg_integer() | undefined,
        % = 12, optional, enum gw.DownlinkTiming
        timing = 'IMMEDIATELY' :: 'IMMEDIATELY' | 'DELAY' | 'GPS_EPOCH' | integer() | undefined,
        % oneof
        timing_info ::
            {immediately_timing_info, geo:'gw.ImmediatelyTimingInfo'()}
            | {delay_timing_info, geo:'gw.DelayTimingInfo'()}
            | {gps_epoch_timing_info, geo:'gw.GPSEpochTimingInfo'()}
            | undefined,
        % = 16, optional
        context = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.IMMEDIATELYTIMINGINFO_PB_H').
-define('GW.IMMEDIATELYTIMINGINFO_PB_H', true).
-record('gw.ImmediatelyTimingInfo', {}).
-endif.

-ifndef('GW.DELAYTIMINGINFO_PB_H').
-define('GW.DELAYTIMINGINFO_PB_H', true).
-record('gw.DelayTimingInfo',
    % = 1, optional
    {delay = undefined :: geo:'google.protobuf.Duration'() | undefined}
).
-endif.

-ifndef('GW.GPSEPOCHTIMINGINFO_PB_H').
-define('GW.GPSEPOCHTIMINGINFO_PB_H', true).
-record('gw.GPSEpochTimingInfo',
    % = 1, optional
    {time_since_gps_epoch = undefined :: geo:'google.protobuf.Duration'() | undefined}
).
-endif.

-ifndef('GW.UPLINKFRAME_PB_H').
-define('GW.UPLINKFRAME_PB_H', true).
-record('gw.UplinkFrame',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: geo:'gw.UplinkTXInfo'() | undefined,
        % = 3, optional
        rx_info = undefined :: geo:'gw.UplinkRXInfo'() | undefined}
).
-endif.

-ifndef('GW.UPLINKFRAMESET_PB_H').
-define('GW.UPLINKFRAMESET_PB_H', true).
-record('gw.UplinkFrameSet',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: geo:'gw.UplinkTXInfo'() | undefined,
        % = 3, repeated
        rx_info = [] :: [geo:'gw.UplinkRXInfo'()] | undefined}
).
-endif.

-ifndef('GW.DOWNLINKFRAME_PB_H').
-define('GW.DOWNLINKFRAME_PB_H', true).
-record('gw.DownlinkFrame',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: geo:'gw.DownlinkTXInfo'() | undefined,
        % = 3, optional, 32 bits
        token = 0 :: non_neg_integer() | undefined,
        % = 4, optional
        downlink_id = <<>> :: iodata() | undefined,
        % = 5, repeated
        items = [] :: [geo:'gw.DownlinkFrameItem'()] | undefined,
        % = 6, optional
        gateway_id = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.DOWNLINKFRAMEITEM_PB_H').
-define('GW.DOWNLINKFRAMEITEM_PB_H', true).
-record('gw.DownlinkFrameItem',
    % = 1, optional
    {phy_payload = <<>> :: iodata() | undefined,
        % = 2, optional
        tx_info = undefined :: geo:'gw.DownlinkTXInfo'() | undefined}
).
-endif.

-ifndef('GW.DOWNLINKTXACK_PB_H').
-define('GW.DOWNLINKTXACK_PB_H', true).
-record('gw.DownlinkTXAck',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional, 32 bits
        token = 0 :: non_neg_integer() | undefined,
        % = 3, optional
        error = [] :: unicode:chardata() | undefined,
        % = 4, optional
        downlink_id = <<>> :: iodata() | undefined,
        % = 5, repeated
        items = [] :: [geo:'gw.DownlinkTXAckItem'()] | undefined}
).
-endif.

-ifndef('GW.DOWNLINKTXACKITEM_PB_H').
-define('GW.DOWNLINKTXACKITEM_PB_H', true).
-record('gw.DownlinkTXAckItem',
    % = 1, optional, enum gw.TxAckStatus
    {status = 'IGNORED' ::
            'IGNORED'
            | 'OK'
            | 'TOO_LATE'
            | 'TOO_EARLY'
            | 'COLLISION_PACKET'
            | 'COLLISION_BEACON'
            | 'TX_FREQ'
            | 'TX_POWER'
            | 'GPS_UNLOCKED'
            | 'QUEUE_FULL'
            | 'INTERNAL_ERROR'
            | integer()
            | undefined}
).
-endif.

-ifndef('GW.GATEWAYCONFIGURATION_PB_H').
-define('GW.GATEWAYCONFIGURATION_PB_H', true).
-record('gw.GatewayConfiguration',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        version = [] :: unicode:chardata() | undefined,
        % = 3, repeated
        channels = [] :: [geo:'gw.ChannelConfiguration'()] | undefined,
        % = 4, optional
        stats_interval = undefined :: geo:'google.protobuf.Duration'() | undefined}
).
-endif.

-ifndef('GW.CHANNELCONFIGURATION_PB_H').
-define('GW.CHANNELCONFIGURATION_PB_H', true).
-record('gw.ChannelConfiguration',
    % = 1, optional, 32 bits
    {frequency = 0 :: non_neg_integer() | undefined,
        % = 2, optional, enum common.Modulation
        modulation = 'LORA' :: 'LORA' | 'FSK' | integer() | undefined,
        % oneof
        modulation_config ::
            {lora_modulation_config, geo:'gw.LoRaModulationConfig'()}
            | {fsk_modulation_config, geo:'gw.FSKModulationConfig'()}
            | undefined,
        % = 5, optional, 32 bits
        board = 0 :: non_neg_integer() | undefined,
        % = 6, optional, 32 bits
        demodulator = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GW.LORAMODULATIONCONFIG_PB_H').
-define('GW.LORAMODULATIONCONFIG_PB_H', true).
-record('gw.LoRaModulationConfig',
    % = 1, optional, 32 bits
    {bandwidth = 0 :: non_neg_integer() | undefined,
        % = 2, repeated, 32 bits
        spreading_factors = [] :: [non_neg_integer()] | undefined}
).
-endif.

-ifndef('GW.FSKMODULATIONCONFIG_PB_H').
-define('GW.FSKMODULATIONCONFIG_PB_H', true).
-record('gw.FSKModulationConfig',
    % = 1, optional, 32 bits
    {bandwidth = 0 :: non_neg_integer() | undefined,
        % = 2, optional, 32 bits
        bitrate = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GW.GATEWAYCOMMANDEXECREQUEST_PB_H').
-define('GW.GATEWAYCOMMANDEXECREQUEST_PB_H', true).
-record('gw.GatewayCommandExecRequest',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        command = [] :: unicode:chardata() | undefined,
        % = 3, optional
        'ExecId' = <<>> :: iodata() | undefined,
        % = 4, optional
        stdin = <<>> :: iodata() | undefined,
        % = 5
        environment = [] :: [{unicode:chardata(), unicode:chardata()}] | undefined}
).
-endif.

-ifndef('GW.GATEWAYCOMMANDEXECRESPONSE_PB_H').
-define('GW.GATEWAYCOMMANDEXECRESPONSE_PB_H', true).
-record('gw.GatewayCommandExecResponse',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        exec_id = <<>> :: iodata() | undefined,
        % = 3, optional
        stdout = <<>> :: iodata() | undefined,
        % = 4, optional
        stderr = <<>> :: iodata() | undefined,
        % = 5, optional
        error = [] :: unicode:chardata() | undefined}
).
-endif.

-ifndef('GW.RAWPACKETFORWARDEREVENT_PB_H').
-define('GW.RAWPACKETFORWARDEREVENT_PB_H', true).
-record('gw.RawPacketForwarderEvent',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        raw_id = <<>> :: iodata() | undefined,
        % = 3, optional
        payload = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.RAWPACKETFORWARDERCOMMAND_PB_H').
-define('GW.RAWPACKETFORWARDERCOMMAND_PB_H', true).
-record('gw.RawPacketForwarderCommand',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional
        raw_id = <<>> :: iodata() | undefined,
        % = 3, optional
        payload = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('GW.CONNSTATE_PB_H').
-define('GW.CONNSTATE_PB_H', true).
-record('gw.ConnState',
    % = 1, optional
    {gateway_id = <<>> :: iodata() | undefined,
        % = 2, optional, enum gw.ConnState.State
        state = 'OFFLINE' :: 'OFFLINE' | 'ONLINE' | integer() | undefined}
).
-endif.

-ifndef('COMMON.KEYENVELOPE_PB_H').
-define('COMMON.KEYENVELOPE_PB_H', true).
-record('common.KeyEnvelope',
    % = 1, optional
    {kek_label = [] :: unicode:chardata() | undefined,
        % = 2, optional
        aes_key = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('COMMON.LOCATION_PB_H').
-define('COMMON.LOCATION_PB_H', true).
-record('common.Location',
    % = 1, optional
    {latitude = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 2, optional
        longitude = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 3, optional
        altitude = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 4, optional, enum common.LocationSource
        source = 'UNKNOWN' ::
            'UNKNOWN'
            | 'GPS'
            | 'CONFIG'
            | 'GEO_RESOLVER_TDOA'
            | 'GEO_RESOLVER_RSSI'
            | 'GEO_RESOLVER_GNSS'
            | 'GEO_RESOLVER_WIFI'
            | integer()
            | undefined,
        % = 5, optional, 32 bits
        accuracy = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('GOOGLE.PROTOBUF.TIMESTAMP_PB_H').
-define('GOOGLE.PROTOBUF.TIMESTAMP_PB_H', true).
-record('google.protobuf.Timestamp',
    % = 1, optional, 64 bits
    {seconds = 0 :: integer() | undefined,
        % = 2, optional, 32 bits
        nanos = 0 :: integer() | undefined}
).
-endif.

-ifndef('GOOGLE.PROTOBUF.DURATION_PB_H').
-define('GOOGLE.PROTOBUF.DURATION_PB_H', true).
-record('google.protobuf.Duration',
    % = 1, optional, 64 bits
    {seconds = 0 :: integer() | undefined,
        % = 2, optional, 32 bits
        nanos = 0 :: integer() | undefined}
).
-endif.

-endif.

[
    {packet_purchaser, [
        {oui, 1},
        {pp_udp_worker, [
            {address, "127.0.0.1"},
            {port, 1700},
            {pull_data_timer, 2000}
        ]},
        {packet_reporter, #{
            aws_bucket => <<"test-bucket">>,
            aws_bucket_region => <<"local">>,
            report_interval => 300_000,
            report_max_size => 50_000_000
        }},
        {ics, #{
            transport => http,
            host => "localhost",
            port => 8085
        }},
        {update_from_ws_config, true},
        {sc_open_dc_amount, 100},
        {sc_expiration_interval, 25},
        {pp_routing_config_filename, testing},
        {http_roaming_port, 8081}
    ]},
    {blockchain, [
        {port, 2154},
        {sc_sup_type, server}
    ]},
    {aws_credentials, [
        {credential_providers, [aws_credentials_env]},
        {aws_access_key_id, "testkey"},
        {aws_secret_access_key, "testsecret"},
        {aws_default_region, "local"}
    ]},
    {grpcbox, [
        {client, #{
            channels => [
                {ics_channel, [{http, "localhost", 8085, []}], #{}},
                {default_channel, [{http, "localhost", 8080, []}], #{}}
            ]
        }},
        {servers, [
            #{
                grpc_opts => #{
                    service_protos => [router_pb, state_channel_pb, packet_router_pb],
                    services => #{
                        'helium.state_channel' => blockchain_grpc_sc_server_handler,
                        'helium.packet_router.packet' => helium_packet_service
                    }
                },
                transport_opts => #{ssl => false},
                listen_opts => #{
                    port => 8080,
                    ip => {0, 0, 0, 0}
                },
                pool_opts => #{size => 2},
                server_opts => #{
                    header_table_size => 4096,
                    enable_push => 1,
                    max_concurrent_streams => unlimited,
                    initial_window_size => 65535,
                    max_frame_size => 16384,
                    max_header_list_size => unlimited
                }
            }
        ]}
    ]},
    {lager, [
        {suppress_supervisor_start_stop, true},
        {log_root, "log"},
        {crash_log, "crash.log"},
        {handlers, [
            {lager_file_backend, [
                {file, "packet_purchaser.log"},
                {level, warning},
                {size, 0},
                {date, "$D0"},
                {count, 7},
                {formatter_config, [
                    "[",
                    date,
                    " ",
                    time,
                    "] ",
                    pid,
                    " [",
                    severity,
                    "]",
                    {gateway_id, [" [", gateway_id, "]"], ""},
                    " [",
                    {module, ""},
                    {function, [":", function], ""},
                    {line, [":", line], ""},
                    "] ",
                    message,
                    "\n"
                ]}
            ]}
        ]},
        {traces, [
            {{lager_file_backend, "packet_purchaser.log"}, [{application, packet_purchaser}],
                debug},
            {{lager_file_backend, "packet_purchaser.log"}, [{module, pp_sc_packet_handler}], debug}
        ]}
    ]}
].

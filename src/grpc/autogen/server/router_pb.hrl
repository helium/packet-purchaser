%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.11.2

-ifndef(router_pb).
-define(router_pb, true).

-define(router_pb_gpb_version, "4.11.2").

-ifndef('BLOCKCHAIN_STATE_CHANNEL_SUMMARY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_SUMMARY_V1_PB_PB_H', true).
-record(blockchain_state_channel_summary_v1_pb,
    % = 1
    {client_pubkeybin = <<>> :: iodata() | undefined,
        % = 2, 64 bits
        num_packets = 0 :: non_neg_integer() | undefined,
        % = 3, 64 bits
        num_dcs = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_V1_PB_PB_H', true).
-record(blockchain_state_channel_v1_pb,
    % = 1
    {id = <<>> :: iodata() | undefined,
        % = 2
        owner = <<>> :: iodata() | undefined,
        % = 3, 64 bits
        credits = 0 :: non_neg_integer() | undefined,
        % = 4, 64 bits
        nonce = 0 :: non_neg_integer() | undefined,
        % = 5
        summaries = [] :: [router_pb:blockchain_state_channel_summary_v1_pb()] | undefined,
        % = 6
        root_hash = <<>> :: iodata() | undefined,
        % = 7
        skewed = <<>> :: iodata() | undefined,
        % = 8, enum helium.blockchain_state_channel_state_v1
        state = open :: open | closed | integer() | undefined,
        % = 9, 64 bits
        expire_at_block = 0 :: non_neg_integer() | undefined,
        % = 10
        signature = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_RESPONSE_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_RESPONSE_V1_PB_PB_H', true).
-record(blockchain_state_channel_response_v1_pb,
    % = 1
    {accepted = false :: boolean() | 0 | 1 | undefined,
        % = 4
        downlink = undefined :: router_pb:packet_pb() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_PACKET_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_PACKET_V1_PB_PB_H', true).
-record(blockchain_state_channel_packet_v1_pb,
    % = 1
    {packet = undefined :: router_pb:packet_pb() | undefined,
        % = 2
        hotspot = <<>> :: iodata() | undefined,
        % = 3
        signature = <<>> :: iodata() | undefined,
        % = 4, enum helium.region
        region = 'US915' ::
            'US915'
            | 'EU868'
            | 'EU433'
            | 'CN470'
            | 'CN779'
            | 'AU915'
            | 'AS923_1'
            | 'KR920'
            | 'IN865'
            | 'AS923_2'
            | 'AS923_3'
            | 'AS923_4'
            | 'AS923_1B'
            | 'CD900_1A'
            | integer()
            | undefined,
        % = 5, 64 bits
        hold_time = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_OFFER_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_OFFER_V1_PB_PB_H', true).
-record(blockchain_state_channel_offer_v1_pb,
    % = 1
    {routing = undefined :: router_pb:routing_information_pb() | undefined,
        % = 2
        packet_hash = <<>> :: iodata() | undefined,
        % = 3, 64 bits
        payload_size = 0 :: non_neg_integer() | undefined,
        % = 4, 32 bits
        fcnt = 0 :: non_neg_integer() | undefined,
        % = 5
        hotspot = <<>> :: iodata() | undefined,
        % = 6
        signature = <<>> :: iodata() | undefined,
        % = 7, enum helium.region
        region = 'US915' ::
            'US915'
            | 'EU868'
            | 'EU433'
            | 'CN470'
            | 'CN779'
            | 'AU915'
            | 'AS923_1'
            | 'KR920'
            | 'IN865'
            | 'AS923_2'
            | 'AS923_3'
            | 'AS923_4'
            | 'AS923_1B'
            | 'CD900_1A'
            | integer()
            | undefined,
        % = 8
        req_diff = false :: boolean() | 0 | 1 | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_PURCHASE_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_PURCHASE_V1_PB_PB_H', true).
-record(blockchain_state_channel_purchase_v1_pb,
    % = 1
    {sc = undefined :: router_pb:blockchain_state_channel_v1_pb() | undefined,
        % = 2
        hotspot = <<>> :: iodata() | undefined,
        % = 3
        packet_hash = <<>> :: iodata() | undefined,
        % = 4, enum helium.region
        region = 'US915' ::
            'US915'
            | 'EU868'
            | 'EU433'
            | 'CN470'
            | 'CN779'
            | 'AU915'
            | 'AS923_1'
            | 'KR920'
            | 'IN865'
            | 'AS923_2'
            | 'AS923_3'
            | 'AS923_4'
            | 'AS923_1B'
            | 'CD900_1A'
            | integer()
            | undefined,
        % = 5
        sc_diff = undefined :: router_pb:blockchain_state_channel_diff_v1_pb() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_v1_pb,
    % = 1
    {id = <<>> :: iodata() | undefined,
        % = 2, 64 bits
        add_nonce = 0 :: non_neg_integer() | undefined,
        % = 3
        signature = <<>> :: iodata() | undefined,
        % = 4
        diffs = [] :: [router_pb:blockchain_state_channel_diff_entry_v1_pb()] | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_ENTRY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_ENTRY_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_entry_v1_pb,
    % oneof
    {entry ::
            {append, router_pb:blockchain_state_channel_diff_append_summary_v1_pb()}
            | {add, router_pb:blockchain_state_channel_diff_update_summary_v1_pb()}
            | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_APPEND_SUMMARY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_APPEND_SUMMARY_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_append_summary_v1_pb,
    % = 1
    {client_pubkeybin = <<>> :: iodata() | undefined,
        % = 2, 64 bits
        num_packets = 0 :: non_neg_integer() | undefined,
        % = 3, 64 bits
        num_dcs = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_DIFF_UPDATE_SUMMARY_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_DIFF_UPDATE_SUMMARY_V1_PB_PB_H', true).
-record(blockchain_state_channel_diff_update_summary_v1_pb,
    % = 1, 64 bits
    {client_index = 0 :: non_neg_integer() | undefined,
        % = 2, 64 bits
        add_packets = 0 :: non_neg_integer() | undefined,
        % = 3, 64 bits
        add_dcs = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_BANNER_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_BANNER_V1_PB_PB_H', true).
-record(blockchain_state_channel_banner_v1_pb,
    % = 1
    {sc = undefined :: router_pb:blockchain_state_channel_v1_pb() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_REJECTION_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_REJECTION_V1_PB_PB_H', true).
-record(blockchain_state_channel_rejection_v1_pb,
    % = 1, 32 bits
    {reject = 0 :: non_neg_integer() | undefined,
        % = 2
        packet_hash = <<>> :: iodata() | undefined}
).
-endif.

-ifndef('BLOCKCHAIN_STATE_CHANNEL_MESSAGE_V1_PB_PB_H').
-define('BLOCKCHAIN_STATE_CHANNEL_MESSAGE_V1_PB_PB_H', true).
-record(blockchain_state_channel_message_v1_pb,
    % oneof
    {msg ::
            {response, router_pb:blockchain_state_channel_response_v1_pb()}
            | {packet, router_pb:blockchain_state_channel_packet_v1_pb()}
            | {offer, router_pb:blockchain_state_channel_offer_v1_pb()}
            | {purchase, router_pb:blockchain_state_channel_purchase_v1_pb()}
            | {banner, router_pb:blockchain_state_channel_banner_v1_pb()}
            | {reject, router_pb:blockchain_state_channel_rejection_v1_pb()}
            | undefined}
).
-endif.

-ifndef('EUI_PB_PB_H').
-define('EUI_PB_PB_H', true).
-record(eui_pb,
    % = 1, 64 bits
    {deveui = 0 :: non_neg_integer() | undefined,
        % = 2, 64 bits
        appeui = 0 :: non_neg_integer() | undefined}
).
-endif.

-ifndef('ROUTING_INFORMATION_PB_PB_H').
-define('ROUTING_INFORMATION_PB_PB_H', true).
-record(routing_information_pb,
    % oneof
    {data :: {devaddr, non_neg_integer()} | {eui, router_pb:eui_pb()} | undefined}
).
-endif.

-ifndef('WINDOW_PB_PB_H').
-define('WINDOW_PB_PB_H', true).
-record(window_pb,
    % = 1, 64 bits
    {timestamp = 0 :: non_neg_integer() | undefined,
        % = 2
        frequency = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 3
        datarate = [] :: iodata() | undefined}
).
-endif.

-ifndef('PACKET_PB_PB_H').
-define('PACKET_PB_PB_H', true).
-record(packet_pb,
    % = 1, 32 bits
    {oui = 0 :: non_neg_integer() | undefined,
        % = 2, enum packet_pb.packet_type
        type = longfi :: longfi | lorawan | integer() | undefined,
        % = 3
        payload = <<>> :: iodata() | undefined,
        % = 4, 64 bits
        timestamp = 0 :: non_neg_integer() | undefined,
        % = 5
        signal_strength = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 6
        frequency = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 7
        datarate = [] :: iodata() | undefined,
        % = 8
        snr = 0.0 :: float() | integer() | infinity | '-infinity' | nan | undefined,
        % = 9
        routing = undefined :: router_pb:routing_information_pb() | undefined,
        % = 10
        rx2_window = undefined :: router_pb:window_pb() | undefined}
).
-endif.

-endif.
